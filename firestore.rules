rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User data: only owner can read/write
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow functions to manage internal subcollections under users (tokens/queue)
    match /users/{userId}/fcmTokens/{tokenId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/notificationQueue/{jobId} {
      // Users should not read queue jobs; functions write and later update via Admin SDK
      allow read: if false;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if false; // Only Admin SDK (server) should update status
    }

    // Community collection
    match /community/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.size() < 2048
                    && request.resource.data.type is string
                    && request.resource.data.content is string
                    && request.resource.data.createdAt != null;

      // Allow reaction-only updates by any authed user
      allow update: if request.auth != null && request.writeFields.all(f => f.matches('reactions(\\..+)?'));

      // Only author can delete
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorUid;
    }
  }
}
